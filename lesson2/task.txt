Задания:

Все задания собрать в пакет lesson2, где каждое задание будет модулем с названием task1 … taskN. В каждом модуле для выполнения задания должна быть определена функция do_taskN(). Создать файл launch.py, который будет запускать все задания из пакета по порядку. При запуске отдельного модуля (например python task1.py) должна вызываться функция (do_taskN) выполняющая данное задание.
1. Выполнить dir(__builtins__).
2. Написать функцию foo() которая принимает опциональный параметр. Если в качестве этого параметра передать функцию, то foo() должна вызвать эту функцию для инициализации параметра.
3. Проверить что строка содержит хотя бы один символ из данного множества.
4. Прочитать все строки из одного файла и записать их в другой файл в обратном порядке.
5. Заменить все вхождения строки “PHP” в файле на “Python”.
6. Дана байтовая строка
    s = 'абвг'
    Посчитать сумму кодов символов unicode строки.
7. Дан список из N списков произвольной длины. Вернуть список, каждый элемент i которого является максимумом соответствующих элементов из данных списков.
    Пример:
    lists = [[1, 2, 3, 4],
            [2, 4, 4, 2],
            [6],
            [1, 1, 1, 1, 1]]
    output = [6, 4, 4, 4, 1]
    Используйте функцию map.
8. Написать функцию, которая проверяет есть ли синтаксические ошибки в данном файле с исходным кодом Python.
9. Написать функцию, которая выводит сумму всех своих аргументов. Проверять тип аргументов, если хотя бы один аргумент не число — бросать TypeError.
10. Написать функцию, аналог parseInt в JavaScript. На вход дается строка и основание системы исчисления. Если эту строку можно преобразовать в целое число, вернуть это число, в противном случае вернуть None.
